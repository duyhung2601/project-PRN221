@page
@model Project221.Pages.ProductsModel
@{
    
}

 <!-- Start Content -->
    <div class="container py-5">
        <div class="row"> @*category*@
             <div class="col-lg-3">
                <h1 class="h2 pb-4">Categories</h1>
                <ul class="list-unstyled templatemo-accordion">
                    <li class="pb-3">
                        <a class="collapsed d-flex justify-content-between h3 text-decoration-none" href="#">
                            Hãng
                            <i class="fa fa-fw fa-chevron-circle-down mt-1"></i>
                        </a>
<form method="get" id="filterForm">
                        <ul class="collapse show list-unstyled pl-3">  @foreach (var ct in Model.Categories){
    @*<a class="link-sort" asp-page="./Index" asp-route-categoryId="@Model.CategoryId" asp-route-sortOrder="@Model.NameSort"
       asp-route-currentFilter="@Model.CurrentFilter">Name</a>*@

                            <li > <label><input type="checkbox" name="selectedcate" value="@ct.Id" /> @ct.CategoryName
                                </label>
                            </li>     
                        }
                        </ul>
                        <button type="submit">apply filters</button>
                        </form>
                    </li>
                    
                </ul>
            </div>
@*end category*@
            <div class="col-lg-9">
                <div class="row">
                    
                    <!--filter-->
                    <div class="col-md-6 pb-4">
                        <div class="d-flex">
                            <select class="form-control">
                                <option>Featured</option>
                                <option>A to Z</option>
                                <option>Item</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                   <div class="row">

                       @foreach (var item in Model.products)
                    {
    <div class="col-md-4">
        
        <div class="card mb-4 product-wap rounded-0">
            <div class="card rounded-0">
                <img class="card-img rounded-0 img-fluid" src="~/ImgPRN/@Html.DisplayFor(modelItem => item.ProductImage)"/>
                <div class="card-img-overlay rounded-0 product-overlay d-flex align-items-center justify-content-center">
                    <ul class="list-unstyled">
                       
                        <li><a class="btn btn-success text-white mt-2" href="/ProductDetail?productId=@item.Id"><i class="far fa-eye"></i></a></li>
                        
                    </ul>
                </div>
            </div>
            <div class="card-body">
                
                <ul class="w-100 list-unstyled d-flex justify-content-between mb-0">
                    
                    <li>@Html.DisplayFor(modelItem => item.ProductName)</li>
                    

                    <li class="pt-2">
                        <span class="product-color-dot color-dot-red float-left rounded-circle ml-1"></span>
                        <span class="product-color-dot color-dot-blue float-left rounded-circle ml-1"></span>
                        <span class="product-color-dot color-dot-black float-left rounded-circle ml-1"></span>
                        <span class="product-color-dot color-dot-light float-left rounded-circle ml-1"></span>
                        <span class="product-color-dot color-dot-green float-left rounded-circle ml-1"></span>
                    </li>
                </ul>
                 <ul class="w-100 list-unstyled d-flex justify-content-between mb-0">
                    
                    <li>Giá: @Html.DisplayFor(modelItem => item.Price)</li>
                    

                    <li class="pt-2">
                        <span class="product-color-dot color-dot-red float-left rounded-circle ml-1"></span>
                        <span class="product-color-dot color-dot-blue float-left rounded-circle ml-1"></span>
                        <span class="product-color-dot color-dot-black float-left rounded-circle ml-1"></span>
                        <span class="product-color-dot color-dot-light float-left rounded-circle ml-1"></span>
                        <span class="product-color-dot color-dot-green float-left rounded-circle ml-1"></span>
                    </li>
                </ul>
                
                <ul class="list-unstyled d-flex justify-content-center mb-1">
                    <li>
                        <i class="text-warning fa fa-star"></i>
                        <i class="text-warning fa fa-star"></i>
                        <i class="text-warning fa fa-star"></i>
                        <i class="text-muted fa fa-star"></i>
                        <i class="text-muted fa fa-star"></i>
                    </li>
                </ul>
                
            </div>
        </div>
        
    </div>
     }
</div>
            </div>
        </div>
    </div>
    @{
    var preDisabled = !Model.products.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.products.HasNextPage ? "disabled" : "";
}
<a asp-page="./Products" style="background-color:aliceblue;color:brown"
   
   asp-route-pageIndex="@(Model.products.PageIndex - 1)"
  
   class="btn btn-primary @preDisabled">
    Previous
</a>
<a asp-page="./Products" style="background-color:aliceblue;color:brown"
   
   asp-route-pageIndex="@(Model.products.PageIndex + 1)"
   
   class="btn btn-primary @nextDisabled">
    Next
</a>
    <!-- End Content -->
    <script>
    // Function to handle click event on category link
    function handleCategoryClick(event) {
        event.preventDefault(); // Prevent default link behavior (page navigation)
        var category = event.target.textContent.trim(); // Get the text content of the clicked link
        // Send an AJAX request to the server to fetch products for the selected category
        fetch(`/Products/GetProductsByCategory?category=${category}`)
            .then(response => response.json()) // Parse the JSON response
            .then(data => {
                // Update the product list on the page with the received data
                document.getElementById('product-list').innerHTML = data.map(product => `<li>${product.productName}</li>`).join('');
            })
            .catch(error => console.error('Error:', error));
    }

    // Add event listeners to category links
    document.querySelectorAll('.category-link').forEach(link => {
        link.addEventListener('click', handleCategoryClick);
    });
</script>
@*<script>
    function updateFilters() {
        document.getElementById("filterForm").submit();
    }
</script>*@